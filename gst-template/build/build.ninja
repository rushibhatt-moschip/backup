# This is the build file for project "gst-template"
# It is autogenerated by the Meson build system.
# Do not edit by hand.

ninja_required_version = 1.8.2

# Rules for module scanning.

# Rules for compiling.

rule c_COMPILER
 command = cc $ARGS -MD -MQ $out -MF $DEPFILE -o $out -c $in
 deps = gcc
 depfile = $DEPFILE_UNQUOTED
 description = Compiling C object $out

# Rules for linking.

rule c_LINKER
 command = cc $ARGS -o $out $in $LINK_ARGS
 description = Linking target $out

rule SHSYM
 command = /usr/bin/meson --internal symbolextractor /home/rushi/practice/gstreamer/PLUGIN-GUIDE/gst-template/build $in $IMPLIB $out $CROSS
 description = Generating symbol file $out
 restat = 1

# Other rules

rule CUSTOM_COMMAND
 command = $COMMAND
 description = $DESC
 restat = 1

rule REGENERATE_BUILD
 command = /usr/bin/meson --internal regenerate /home/rushi/practice/gstreamer/PLUGIN-GUIDE/gst-template /home/rushi/practice/gstreamer/PLUGIN-GUIDE/gst-template/build --backend ninja
 description = Regenerating build files.
 generator = 1

# Phony build target, always out of date

build PHONY: phony 

# Build rules for targets

build gst-app/gst-app.p/src_main.c.o: c_COMPILER ../gst-app/src/main.c
 DEPFILE = gst-app/gst-app.p/src_main.c.o.d
 DEPFILE_UNQUOTED = gst-app/gst-app.p/src_main.c.o.d
 ARGS = -Igst-app/gst-app.p -Igst-app -I../gst-app -I/usr/include/gstreamer-1.0 -I/usr/include/x86_64-linux-gnu -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -g -pthread

build gst-app/gst-app.p/src_play.c.o: c_COMPILER ../gst-app/src/play.c
 DEPFILE = gst-app/gst-app.p/src_play.c.o.d
 DEPFILE_UNQUOTED = gst-app/gst-app.p/src_play.c.o.d
 ARGS = -Igst-app/gst-app.p -Igst-app -I../gst-app -I/usr/include/gstreamer-1.0 -I/usr/include/x86_64-linux-gnu -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -g -pthread

build gst-app/gst-app: c_LINKER gst-app/gst-app.p/src_main.c.o gst-app/gst-app.p/src_play.c.o | /usr/lib/x86_64-linux-gnu/libglib-2.0.so /usr/lib/x86_64-linux-gnu/libgobject-2.0.so /usr/lib/x86_64-linux-gnu/libgstreamer-1.0.so
 LINK_ARGS = -Wl,--as-needed -Wl,--no-undefined -Wl,--start-group /usr/lib/x86_64-linux-gnu/libgstreamer-1.0.so /usr/lib/x86_64-linux-gnu/libgobject-2.0.so /usr/lib/x86_64-linux-gnu/libglib-2.0.so -Wl,--end-group

build gst-plugin/libgstplugin.so.p/src_gstplugin.c.o: c_COMPILER ../gst-plugin/src/gstplugin.c
 DEPFILE = gst-plugin/libgstplugin.so.p/src_gstplugin.c.o.d
 DEPFILE_UNQUOTED = gst-plugin/libgstplugin.so.p/src_gstplugin.c.o.d
 ARGS = -Igst-plugin/libgstplugin.so.p -Igst-plugin -I../gst-plugin -I/usr/include/gstreamer-1.0 -I/usr/include/x86_64-linux-gnu -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -g -fPIC -pthread -DHAVE_CONFIG_H

build gst-plugin/libgstplugin.so.p/libgstplugin.so.symbols: SHSYM gst-plugin/libgstplugin.so
 IMPLIB = gst-plugin/libgstplugin.so

build gst-plugin/libgstplugin.so: c_LINKER gst-plugin/libgstplugin.so.p/src_gstplugin.c.o | /usr/lib/x86_64-linux-gnu/libglib-2.0.so /usr/lib/x86_64-linux-gnu/libgobject-2.0.so /usr/lib/x86_64-linux-gnu/libgstreamer-1.0.so
 LINK_ARGS = -Wl,--as-needed -Wl,--no-undefined -shared -fPIC -Wl,--start-group -Wl,-soname,libgstplugin.so /usr/lib/x86_64-linux-gnu/libgstreamer-1.0.so /usr/lib/x86_64-linux-gnu/libgobject-2.0.so /usr/lib/x86_64-linux-gnu/libglib-2.0.so -Wl,--end-group

build gst-plugin/libgstaudiofilterexample.so.p/src_gstaudiofilter.c.o: c_COMPILER ../gst-plugin/src/gstaudiofilter.c
 DEPFILE = gst-plugin/libgstaudiofilterexample.so.p/src_gstaudiofilter.c.o.d
 DEPFILE_UNQUOTED = gst-plugin/libgstaudiofilterexample.so.p/src_gstaudiofilter.c.o.d
 ARGS = -Igst-plugin/libgstaudiofilterexample.so.p -Igst-plugin -I../gst-plugin -I/usr/include/gstreamer-1.0 -I/usr/include/x86_64-linux-gnu -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/orc-0.4 -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -g -fPIC -pthread -DHAVE_CONFIG_H

build gst-plugin/libgstaudiofilterexample.so.p/libgstaudiofilterexample.so.symbols: SHSYM gst-plugin/libgstaudiofilterexample.so
 IMPLIB = gst-plugin/libgstaudiofilterexample.so

build gst-plugin/libgstaudiofilterexample.so: c_LINKER gst-plugin/libgstaudiofilterexample.so.p/src_gstaudiofilter.c.o | /usr/lib/x86_64-linux-gnu/libglib-2.0.so /usr/lib/x86_64-linux-gnu/libgobject-2.0.so /usr/lib/x86_64-linux-gnu/libgstaudio-1.0.so /usr/lib/x86_64-linux-gnu/libgstbase-1.0.so /usr/lib/x86_64-linux-gnu/libgstreamer-1.0.so
 LINK_ARGS = -Wl,--as-needed -Wl,--no-undefined -shared -fPIC -Wl,--start-group -Wl,-soname,libgstaudiofilterexample.so /usr/lib/x86_64-linux-gnu/libgstreamer-1.0.so /usr/lib/x86_64-linux-gnu/libgobject-2.0.so /usr/lib/x86_64-linux-gnu/libglib-2.0.so /usr/lib/x86_64-linux-gnu/libgstaudio-1.0.so /usr/lib/x86_64-linux-gnu/libgstbase-1.0.so -Wl,--end-group

build gst-plugin/libgstmyfilter.so.p/src_gstmyfilter.c.o: c_COMPILER ../gst-plugin/src/gstmyfilter.c
 DEPFILE = gst-plugin/libgstmyfilter.so.p/src_gstmyfilter.c.o.d
 DEPFILE_UNQUOTED = gst-plugin/libgstmyfilter.so.p/src_gstmyfilter.c.o.d
 ARGS = -Igst-plugin/libgstmyfilter.so.p -Igst-plugin -I../gst-plugin -I. -I.. -I/usr/include/gstreamer-1.0 -I/usr/include/x86_64-linux-gnu -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/orc-0.4 -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -g -fPIC -pthread -DHAVE_CONFIG_H

build gst-plugin/libgstmyfilter.so.p/libgstmyfilter.so.symbols: SHSYM gst-plugin/libgstmyfilter.so
 IMPLIB = gst-plugin/libgstmyfilter.so

build gst-plugin/libgstmyfilter.so: c_LINKER gst-plugin/libgstmyfilter.so.p/src_gstmyfilter.c.o | /usr/lib/x86_64-linux-gnu/libglib-2.0.so /usr/lib/x86_64-linux-gnu/libgobject-2.0.so /usr/lib/x86_64-linux-gnu/libgstbase-1.0.so /usr/lib/x86_64-linux-gnu/libgstreamer-1.0.so /usr/lib/x86_64-linux-gnu/libgstvideo-1.0.so /usr/lib/x86_64-linux-gnu/libm.a /usr/lib/x86_64-linux-gnu/libm.so
 LINK_ARGS = -Wl,--as-needed -Wl,--no-undefined -shared -fPIC -Wl,--start-group -Wl,-soname,libgstmyfilter.so /usr/lib/x86_64-linux-gnu/libgstreamer-1.0.so /usr/lib/x86_64-linux-gnu/libgobject-2.0.so /usr/lib/x86_64-linux-gnu/libglib-2.0.so /usr/lib/x86_64-linux-gnu/libgstbase-1.0.so /usr/lib/x86_64-linux-gnu/libgstvideo-1.0.so -lm -Wl,--end-group

# Test rules

build meson-test: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --no-rebuild --print-errorlogs
 DESC = Running$ all$ tests.
 pool = console

build test: phony meson-test

build meson-benchmark: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --benchmark --logbase benchmarklog --num-processes=1 --no-rebuild
 DESC = Running$ benchmark$ suite.
 pool = console

build benchmark: phony meson-benchmark

# Install rules

build meson-install: CUSTOM_COMMAND PHONY | all
 DESC = Installing$ files.
 COMMAND = /usr/bin/meson install --no-rebuild
 pool = console

build install: phony meson-install

build meson-dist: CUSTOM_COMMAND PHONY
 DESC = Creating$ source$ packages
 COMMAND = /usr/bin/meson dist
 pool = console

build dist: phony meson-dist

# Suffix

build meson-TAGS: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal tags etags /home/rushi/practice/gstreamer/PLUGIN-GUIDE/gst-template
 pool = console

build TAGS: phony meson-TAGS

build meson-ctags: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal tags ctags /home/rushi/practice/gstreamer/PLUGIN-GUIDE/gst-template
 pool = console

build ctags: phony meson-ctags

build meson-uninstall: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal uninstall
 pool = console

build uninstall: phony meson-uninstall

build all: phony gst-app/gst-app gst-plugin/libgstplugin.so gst-plugin/libgstaudiofilterexample.so gst-plugin/libgstmyfilter.so

build clean: phony meson-clean

build meson-clean: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/ninja -t clean
 description = Cleaning

build build.ninja: REGENERATE_BUILD ../meson.build ../gst-app/meson.build ../gst-plugin/meson.build meson-private/coredata.dat
 pool = console

build reconfigure: REGENERATE_BUILD PHONY
 pool = console

build ../meson.build ../gst-app/meson.build ../gst-plugin/meson.build meson-private/coredata.dat: phony 

default all

